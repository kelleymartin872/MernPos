[{"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\index.js":"1","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\UserService.js":"2","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Main.component.jsx":"3","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Loading.component.jsx":"4","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\ApiService.js":"5","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\DTOs\\Constants.js":"6","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\TransactionService.js":"7","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\SignInForm.component.jsx":"8","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Error.component.jsx":"9","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\ModalPopup.component.jsx":"10","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Offline.component.jsx":"11","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\MainMenu.component.jsx":"12","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\LineDetail.component.jsx":"13","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Footer.component.jsx":"14","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Header.component.jsx":"15","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Txn_components\\TxnList.component.jsx":"16","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\DTOs\\MenuButton.js":"17","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Form.component.jsx":"18","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Input.component.jsx":"19","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddItem.component.jsx":"20","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ReturnItem.component.jsx":"21","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ReturnReceipt.component.jsx":"22","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddCustomer.component.jsx":"23","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ChangeQty.component.jsx":"24","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Payment.component.jsx":"25","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\RemoveLine.component.jsx":"26","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\LineDisc.component.jsx":"27","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\TotalDisc.component.jsx":"28","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AbortTxn.component.jsx":"29","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Txn_components\\ItemLine.component.jsx":"30","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\SearchItem.component.jsx":"31","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\PaymentService.js":"32","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\CustomerService.js":"33","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\ItemService.js":"34","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddPoints.component.jsx":"35","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddCoupon.component.jsx":"36","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\CouponService.js":"37"},{"size":777,"mtime":1625323475328,"results":"38","hashOfConfig":"39"},{"size":845,"mtime":1623577553586,"results":"40","hashOfConfig":"39"},{"size":12946,"mtime":1625330742269,"results":"41","hashOfConfig":"39"},{"size":658,"mtime":1623577553590,"results":"42","hashOfConfig":"39"},{"size":2635,"mtime":1623577553586,"results":"43","hashOfConfig":"39"},{"size":3102,"mtime":1625330405813,"results":"44","hashOfConfig":"39"},{"size":2673,"mtime":1623577553586,"results":"45","hashOfConfig":"39"},{"size":2988,"mtime":1623577553591,"results":"46","hashOfConfig":"39"},{"size":1904,"mtime":1624778451709,"results":"47","hashOfConfig":"39"},{"size":8282,"mtime":1625318739982,"results":"48","hashOfConfig":"39"},{"size":1787,"mtime":1624778449263,"results":"49","hashOfConfig":"39"},{"size":4160,"mtime":1625317032570,"results":"50","hashOfConfig":"39"},{"size":693,"mtime":1623577553588,"results":"51","hashOfConfig":"39"},{"size":3787,"mtime":1624779327339,"results":"52","hashOfConfig":"39"},{"size":1357,"mtime":1624779294423,"results":"53","hashOfConfig":"39"},{"size":7612,"mtime":1625330664643,"results":"54","hashOfConfig":"39"},{"size":215,"mtime":1623577553586,"results":"55","hashOfConfig":"39"},{"size":851,"mtime":1623577553590,"results":"56","hashOfConfig":"39"},{"size":594,"mtime":1623577553590,"results":"57","hashOfConfig":"39"},{"size":2280,"mtime":1625324002170,"results":"58","hashOfConfig":"39"},{"size":2286,"mtime":1624735924367,"results":"59","hashOfConfig":"39"},{"size":3948,"mtime":1623577553591,"results":"60","hashOfConfig":"39"},{"size":8214,"mtime":1625324313115,"results":"61","hashOfConfig":"39"},{"size":4178,"mtime":1623585706931,"results":"62","hashOfConfig":"39"},{"size":3735,"mtime":1623586830381,"results":"63","hashOfConfig":"39"},{"size":3025,"mtime":1623577553590,"results":"64","hashOfConfig":"39"},{"size":7003,"mtime":1623577553590,"results":"65","hashOfConfig":"39"},{"size":6965,"mtime":1623577553591,"results":"66","hashOfConfig":"39"},{"size":2022,"mtime":1623577553589,"results":"67","hashOfConfig":"39"},{"size":1322,"mtime":1623577553591,"results":"68","hashOfConfig":"39"},{"size":6821,"mtime":1625324858787,"results":"69","hashOfConfig":"39"},{"size":867,"mtime":1623585670364,"results":"70","hashOfConfig":"39"},{"size":1635,"mtime":1624738707377,"results":"71","hashOfConfig":"39"},{"size":1628,"mtime":1623585812747,"results":"72","hashOfConfig":"39"},{"size":3029,"mtime":1624740742892,"results":"73","hashOfConfig":"39"},{"size":2979,"mtime":1625323598280,"results":"74","hashOfConfig":"39"},{"size":560,"mtime":1623585802728,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cexqw8",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\index.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\UserService.js",[],["159","160"],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Main.component.jsx",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Loading.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\ApiService.js",["182","183"],"\r\nimport Constants from '../DTOs/Constants';\r\nimport axios from 'axios';\r\n\r\nexport default class ApiService\r\n{\r\n    constructor(reqMethod,reqUrl,reqObj)\r\n    {\r\n        this.reqMethod = reqMethod;\r\n        this.reqUrl = reqUrl;\r\n        this.reqObj = reqObj;\r\n    }\r\n\r\n    getResponse()\r\n    {\r\n        const reqUrl = this.reqUrl;\r\n        const reqObj = this.reqObj;\r\n\r\n        switch(this.reqMethod)\r\n        {\r\n            case \"GET\":\r\n            { \r\n                return new Promise( function(resolve,reject)\r\n                {\r\n                    axios.get(reqUrl, reqObj)\r\n                        .then(res => {\r\n                            window.serverData = res.data;\r\n                            resolve(window.serverData);\r\n                        })\r\n                        .catch(err => {\r\n                            if(err.response && err.response.data)\r\n                                window.serverData = err.response.data;\r\n                            else\r\n                            {\r\n                                window.serverData = {\r\n                                    data:\r\n                                    {\r\n                                        isOffline:true,\r\n                                        errorMsg:\"Server is Unreachable!\"\r\n                                    }\r\n                                };\r\n                            }\r\n                            resolve(window.serverData);\r\n                    });\r\n                });\r\n            }\r\n\r\n            case \"POST\":\r\n            { \r\n                return new Promise( function(resolve,reject)\r\n                {\r\n                    axios.post(reqUrl, reqObj)\r\n                        .then(res => {\r\n                            window.serverData = res.data;\r\n                            resolve(window.serverData);\r\n                        })\r\n                        .catch(err => {\r\n                            if(err.response && err.response.data)\r\n                                window.serverData = err.response.data;\r\n                            else\r\n                            {\r\n                                window.serverData = {\r\n                                    data:\r\n                                    {\r\n                                        isOffline:true,\r\n                                        errorMsg:\"Server is Unreachable!\"\r\n                                    }\r\n                                };\r\n                            }\r\n                            resolve(window.serverData);\r\n                        });\r\n                });\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\DTOs\\Constants.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\TransactionService.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\SignInForm.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Error.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\ModalPopup.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Offline.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\MainMenu.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\LineDetail.component.jsx",["184","185"],"\r\nimport React from 'react';\r\nimport Constants from '../DTOs/Constants'\r\n\r\n\r\nconst LineDetail = (props) => \r\n{\r\n    const mainStyle={ \r\n        width: \"100%\",\r\n        margin:0,\r\n        padding:10,\r\n        height:\"100%\"\r\n    };\r\n    \r\n    const lineDetailStyle={\r\n        padding:\"0px\",\r\n        overflowY:\"auto\",\r\n        height:\"40vh\", border: \"1px solid black\"\r\n    };\r\n\r\n    let txn = props.transaction;\r\n\r\n\r\n    return ( \r\n        <div style={{margin:\"0px\"}}  className=\"row\"  >\r\n            <div style={lineDetailStyle} className=\"col-12\" >\r\n                <div style={mainStyle}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default LineDetail;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Footer.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Header.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Txn_components\\TxnList.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\DTOs\\MenuButton.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Form.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Input.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddItem.component.jsx",["186"],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ReturnItem.component.jsx",["187"],"\r\nimport React from 'react';\r\nimport Form from './Form.component';\r\nimport Joi from 'joi-browser';\r\nimport ItemService from '../../apiServices/ItemService';\r\nimport Loading from './Loading.component';\r\nimport SearchItem from './SearchItem.component';\r\n\r\nclass ReturnItem extends Form \r\n{\r\n    state = { \r\n        isLoading:false,\r\n        formData: {\r\n            ItemID : \"\",\r\n            ItemName : \"\"\r\n        },\r\n        ItemData: [],\r\n        formError : \"\"\r\n    };\r\n\r\n    schema = {\r\n        ItemID : Joi,\r\n        ItemName : Joi\r\n    };\r\n    \r\n    \r\n    getItems = () =>\r\n    {\r\n        this.setState({ formError : \"\",isLoading:true });\r\n        \r\n        let service = new ItemService();\r\n        let reqObj = {\r\n            itemId: this.state.formData.ItemID ,\r\n            itemName: this.state.formData.ItemName\r\n        };\r\n\r\n        service.getItems(reqObj).then(res =>\r\n        {\r\n            if(res.data.flowSuccess === true)\r\n            {\r\n                this.setState({ ItemData : res.data.items , isLoading:false})\r\n            }\r\n            else\r\n            {\r\n                this.setState({ ItemData : res.data.items, formError : res.data.errorMsg , isLoading:false})\r\n            }\r\n        });\r\n    }\r\n    \r\n    addItem = (itemId) =>\r\n    {\r\n        this.setState({ formError : \"\", isLoading:true });\r\n        \r\n        let service = new ItemService();\r\n        let reqObj = {\r\n            itemId: itemId ,\r\n            itemName: \"\",\r\n            itemQty: -1\r\n        };\r\n\r\n        service.addItemTxn(reqObj).then(res =>\r\n        {\r\n            this.props.doClose();\r\n        });\r\n    }\r\n\r\n\r\n    render() { \r\n        \r\n        return <SearchItem  \r\n                        isLoading={this.state.isLoading} \r\n                        formData={this.state.formData} \r\n                        ItemData={this.state.ItemData} \r\n                        formError={this.state.formError} \r\n                        isMobile={this.props.isMobile} \r\n                        handleInputChange={this.handleInputChange}\r\n                        doClose={() => this.props.doClose()}\r\n                        getItems={() => this.getItems()}\r\n                        addItem={(itemId) => this.addItem(itemId)}\r\n                    />;\r\n    }\r\n\r\n}\r\n \r\nexport default ReturnItem;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ReturnReceipt.component.jsx",["188"],"\r\nimport React from 'react';\r\nimport Form from './Form.component';\r\nimport Joi from 'joi-browser';\r\nimport TransactionService from '../../apiServices/TransactionService';\r\nimport ItemService from '../../apiServices/ItemService';\r\nimport Loading from './Loading.component';\r\nimport Swal from 'sweetalert2'\r\nimport Input from './Input.component';\r\nimport Constants from '../../DTOs/Constants';\r\n\r\nclass ReturnReceipt extends Form \r\n{\r\n    state = { \r\n        isLoading:false,\r\n        formData: {\r\n            TxnNmbr : 0,\r\n            TxnDate : \"\"\r\n        },\r\n        formError : \"\"\r\n    };\r\n\r\n    schema = {\r\n        TxnDate : Joi,\r\n        TxnNmbr : Joi.number()\r\n    };\r\n    \r\n    \r\n    returnReceipt = () =>\r\n    {   \r\n        this.setState({ isLoading:true });\r\n        \r\n        let service = new TransactionService();\r\n        let reqObj = {\r\n            TxnDate: this.state.formData.TxnDate,\r\n            TxnNmbr: this.state.formData.TxnNmbr \r\n        };\r\n\r\n        service.returnReceipt(reqObj).then(res =>\r\n        {\r\n            if(res.data.flowSuccess === true)\r\n            {\r\n                let reqObj = {\r\n                    state : Constants.PosState.payState\r\n                };\r\n                \r\n                service.changeState(reqObj).then(res =>\r\n                {\r\n                    if(res.data.flowSuccess === true)\r\n                    {\r\n                        Swal.fire(\r\n                            'Return receipt successful!','',\r\n                            'success'\r\n                        );\r\n                        this.props.doClose();\r\n                    }\r\n                });\r\n\r\n                this.setState({ formError : \"\", isLoading:false});\r\n                return;\r\n            }\r\n            else\r\n            {\r\n                this.setState({ formError : res.data.errorMsg , isLoading:false})\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    render() { \r\n        let formData = this.state.formData;\r\n        let formError = this.state.formError;\r\n\r\n        let render = [];\r\n        render.push(\r\n            <div key=\"modal-header\" className=\"modal-header\">\r\n                <h4 className=\"modal-title\" style={{margin:\"auto\"}}> Return Receipt </h4> \r\n                \r\n                <button type=\"button\" style={{fontSize:\"25px\" , marginLeft:\"0px\" }} \r\n                    onClick={() => this.props.doClose()}  className=\"close\" >\r\n                    &times;\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        render.push(\r\n            <div key=\"modal-body\" className=\"modal-body\">\r\n                <form> \r\n                    <Input name=\"TxnDate\" type=\"date\" value={formData.TxnDate} onChange={this.handleInputChange}  />\r\n                    <Input name=\"TxnNmbr\" type=\"text\" value={formData.TxnNmbr} onChange={this.handleInputChange}  />\r\n                   </form>\r\n            </div>\r\n        );\r\n        \r\n        render.push(\r\n            <div key=\"modal-footer\" className=\"modal-footer\">\r\n                <button\r\n                    type=\"button\" className=\"btn btn-success\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"99%\",backgroundColor:\"#f16b52\"}} \r\n                    onClick={() => this.returnReceipt()} > \r\n                    Return Receipt\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        if(formError && formError !== \"\")\r\n        {\r\n            render.push(\r\n                <div key=\"modal-error\" className=\"list-group-item list-group-item-danger\" > { formError } </div>\r\n            );\r\n        }\r\n\r\n        return ( \r\n            <div style={{paddingTop: \"100px\"}}>\r\n                <div className=\"modal-dialog \" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        {render}\r\n                    </div>\r\n                </div>\r\n                { this.state.isLoading &&  <Loading/> }\r\n            </div>\r\n         );\r\n    }\r\n\r\n\r\n}\r\n \r\nexport default ReturnReceipt;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddCustomer.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\ChangeQty.component.jsx",["189","190"],"\r\nimport React from 'react';\r\nimport Form from './Form.component';\r\nimport Input from './Input.component';\r\nimport Joi from 'joi-browser';\r\nimport TransactionService from '../../apiServices/TransactionService';\r\nimport Loading from './Loading.component';\r\nimport PaymentService from '../../apiServices/PaymentService';\r\nimport ItemService from '../../apiServices/ItemService';\r\n\r\nclass ChangeQty extends Form \r\n{\r\n    state = { \r\n        isLoading:false,\r\n        formData: {\r\n            itemQty : \"\"\r\n        },\r\n        formError : \"\"\r\n    };\r\n\r\n    schema = {\r\n        itemQty: Joi.number()\r\n    };\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state.formData.itemQty = (this.props.itemObj.itemQty).toString();\r\n    }\r\n\r\n    submitForm = () =>\r\n    {   \r\n        try\r\n        {  \r\n            let inputQty = parseInt(this.state.formData.itemQty);\r\n            let currQty = parseInt(this.props.itemObj.itemQty);\r\n            if(inputQty === currQty)\r\n            {\r\n                this.props.doClose();\r\n                return;\r\n            }\r\n\r\n            if((inputQty > 0 && currQty < 0))\r\n            {\r\n                this.setState({formError : \"Quantity must be negative\"});\r\n                return;\r\n            }\r\n            if((currQty < 0 && inputQty > 0))\r\n            {\r\n                this.setState({formError : \"Quantity must be positive\"});\r\n                return;\r\n            }\r\n\r\n            this.setState({ isLoading:true });\r\n            \r\n            let service = new ItemService();\r\n            let reqObj = {\r\n                lineNumber: parseInt(this.props.itemObj.lineNumber),\r\n                itemQty: inputQty\r\n            };\r\n            \r\n            service.setItemQty(reqObj).then(res =>\r\n            {\r\n                if(res.data.flowSuccess === true)\r\n                {\r\n                    this.setState({ isLoading:false });\r\n                    this.props.doClose();\r\n                }\r\n                else\r\n                {\r\n                    this.setState({formError : res.data.errorMsg , isLoading:false})\r\n                }\r\n            });\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n    render() \r\n    {\r\n        let formData = this.state.formData;\r\n        let formError = this.state.formError;\r\n\r\n        let render = [];\r\n        render.push(   \r\n            <div key=\"modal-header\" className=\"modal-header\">\r\n                <h3 className=\"modal-title\" style={{margin:\"auto\"}}> Enter the Quantity</h3> \r\n            </div>\r\n        );\r\n\r\n        render.push(\r\n            <div key=\"modal-body\" className=\"modal-body\">\r\n                <form>\r\n                    <Input name=\"itemQty\" type=\"text\" value={formData.itemQty} onChange={this.handleInputChange}  />\r\n                </form>\r\n            </div>\r\n        );\r\n        \r\n        render.push(\r\n            <div key=\"modal-footer\" className=\"modal-footer\">\r\n                <button\r\n                    type=\"button\" className=\"btn btn-danger\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\"}} \r\n                    onClick={() => this.props.doClose()}  > \r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    type=\"button\" className=\"btn btn-success\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\",backgroundColor:\"#f16b52\"}} \r\n                    onClick={() => this.handleFormSubmit()} > \r\n                    Confirm\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        if(formError && formError !== \"\")\r\n        {\r\n            render.push(\r\n                <div key=\"modal-error\" className=\"list-group-item list-group-item-danger\" > { formError } </div>\r\n            );\r\n        }\r\n\r\n        return ( \r\n        \r\n            <div>\r\n                <div className=\"modal-dialog \" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        {render}\r\n                    </div>\r\n                </div>\r\n                { this.state.isLoading &&  <Loading/> }\r\n            </div>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default ChangeQty;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\Payment.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\RemoveLine.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\LineDisc.component.jsx",["191","192","193","194"],"\r\nimport React from 'react';\r\nimport Form from './Form.component';\r\nimport Input from './Input.component';\r\nimport Joi from 'joi-browser';\r\nimport Loading from './Loading.component';\r\nimport ItemService from '../../apiServices/ItemService';\r\n\r\nclass LineDisc extends Form \r\n{\r\n    state = { \r\n        isLoading:false,\r\n        activeTab:0,\r\n        formData: {\r\n            percentage : 0,\r\n            price : 0\r\n        },\r\n        formError : \"\"\r\n    };\r\n\r\n    schema = {\r\n        percentage: Joi.number(),\r\n        price: Joi.number()\r\n    };\r\n\r\n    toggleDiscTab(discTab)\r\n    {\r\n        this.setState({ activeTab:discTab.id });\r\n        return;\r\n    }\r\n\r\n    submitForm = () =>\r\n    {   \r\n        try\r\n        {  \r\n            let maxVal = this.props.itemObj.itemPrice;\r\n            let inputPrice = parseFloat(this.state.formData.price);\r\n            let inputPerc = parseFloat(this.state.formData.percentage);\r\n            let discountAmt = 0;\r\n\r\n            if(this.state.activeTab == 0)\r\n            {\r\n                if(inputPerc === 0)\r\n                {\r\n                    this.props.doClose();\r\n                    return;\r\n                }\r\n                if(inputPerc < 0 || inputPerc > 99)\r\n                {\r\n                    this.setState({formError : \"Invalid input!\"});\r\n                    return;\r\n                }\r\n                discountAmt = (maxVal * inputPerc / 100);\r\n            }\r\n            else \r\n            {\r\n                if(inputPerc < 0 || inputPerc > maxVal)\r\n                {\r\n                    this.setState({formError : \"Invalid input!\"});\r\n                    return;\r\n                }\r\n                if(this.state.activeTab == 1)\r\n                {       \r\n                    if(inputPrice === 0)\r\n                    {\r\n                        this.props.doClose();\r\n                        return;\r\n                    }\r\n                    discountAmt = inputPrice;\r\n                }\r\n                if(this.state.activeTab == 2)\r\n                {       \r\n                    if(inputPrice === maxVal)\r\n                    {\r\n                        this.props.doClose();\r\n                        return;\r\n                    }\r\n                    discountAmt = maxVal - inputPrice;\r\n                }\r\n            }\r\n            \r\n            this.setState({ isLoading:true });\r\n            \r\n            let service = new ItemService();\r\n            let reqObj = {\r\n                lineNumber: parseInt(this.props.itemObj.lineNumber),\r\n                discountAmt: -1 * parseFloat(discountAmt).toFixed(2)\r\n            };\r\n            service.lineDiscount(reqObj).then(res =>\r\n            {\r\n                if(res.data.flowSuccess === true)\r\n                {\r\n                    this.setState({ isLoading:false });\r\n                    this.props.doClose();\r\n                }\r\n                else\r\n                {\r\n                    this.setState({formError : res.data.errorMsg , isLoading:false})\r\n                }\r\n            });\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n    render() \r\n    {\r\n        let formData = this.state.formData;\r\n        let formError = this.state.formError;\r\n\r\n        let render = [];\r\n        render.push(   \r\n            <div key=\"modal-header\" className=\"modal-header\">\r\n                <h3 className=\"modal-title\" style={{margin:\"auto\"}}>  Line Discount </h3> \r\n            </div>\r\n        );\r\n        \r\n        let tabBtns = [];\r\n        tabBtns.push( {key:\"percent\", id:0, text:\"Percentage\", } );\r\n        tabBtns.push( {key:\"redPrice\", id:1, text:\"Reduce Price\", } );\r\n        tabBtns.push( {key:\"setPrice\", id:2, text:\"Set Price\", } );\r\n        \r\n        let tabBtnRender = [];\r\n        \r\n        tabBtns.forEach(tabBtn => {\r\n            if(tabBtn.id === this.state.activeTab)\r\n            {\r\n                tabBtnRender.push(\r\n                    <li key={tabBtn.id} className=\"nav-item\">\r\n                        <button key={tabBtn.id} className=\"nav-link active\"  style={{fontSize:\"16px\"}}\r\n                                type=\"button\" onClick={() => this.toggleDiscTab(tabBtn)} >  \r\n                            {tabBtn.text} \r\n                        </button>\r\n                    </li>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                tabBtnRender.push(\r\n                    <li key={tabBtn.id} className=\"nav-item\">\r\n                        <button key={tabBtn.id} className=\"nav-link\" style={{fontSize:\"16px\"}}\r\n                                type=\"button\" onClick={() => this.toggleDiscTab(tabBtn)} >  \r\n                            {tabBtn.text} \r\n                        </button>\r\n                    </li>\r\n                );\r\n            }\r\n        });\r\n        \r\n        let tabContentRender =  <form>\r\n                <Input key={this.state.activeTab} name=\"price\" type=\"number\" min=\"0.00\" step=\"0.01\" value={formData.price} onChange={this.handleInputChange}  />\r\n            </form>;\r\n            \r\n        if(this.state.activeTab == 0)\r\n        {\r\n            tabContentRender =  <form>\r\n                    <Input key={this.state.activeTab} name=\"percentage\" type=\"number\" min=\"0.00\"  step=\"0.01\" value={formData.percentage} onChange={this.handleInputChange}  />\r\n                </form>;\r\n        }\r\n\r\n\r\n        render.push(\r\n            <div key=\"modal-body\" className=\"modal-body\">\r\n                <ul className=\"nav nav-tabs\" id=\"myTab\" >\r\n                    {tabBtnRender}\r\n                </ul>\r\n                <hr/>\r\n                <div>\r\n                    {tabContentRender}\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n        render.push(\r\n            <div key=\"modal-footer\" className=\"modal-footer\">\r\n                <button\r\n                    type=\"button\" className=\"btn btn-danger\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\"}} \r\n                    onClick={() => this.props.doClose()}  > \r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    type=\"button\" className=\"btn btn-success\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\",backgroundColor:\"#f16b52\"}} \r\n                    onClick={() => this.handleFormSubmit()} > \r\n                    Confirm\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        if(formError && formError !== \"\")\r\n        {\r\n            render.push(\r\n                <div key=\"modal-error\" className=\"list-group-item list-group-item-danger\" > { formError } </div>\r\n            );\r\n        }\r\n\r\n        return ( \r\n        \r\n            <div>\r\n                <div className=\"modal-dialog \" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        {render}\r\n                    </div>\r\n                </div>\r\n                { this.state.isLoading &&  <Loading/> }\r\n            </div>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default LineDisc;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\TotalDisc.component.jsx",["195","196","197","198"],"\r\nimport React from 'react';\r\nimport Form from './Form.component';\r\nimport Input from './Input.component';\r\nimport Joi from 'joi-browser';\r\nimport Loading from './Loading.component';\r\nimport TransactionService from '../../apiServices/TransactionService';\r\n\r\nclass TotalDisc extends Form \r\n{\r\n    state = { \r\n        isLoading:false,\r\n        activeTab:0,\r\n        formData: {\r\n            percentage : 0,\r\n            price : 0\r\n        },\r\n        formError : \"\"\r\n    };\r\n\r\n    schema = {\r\n        percentage: Joi.number(),\r\n        price: Joi.number()\r\n    };\r\n\r\n    toggleDiscTab(discTab)\r\n    {\r\n        this.setState({ activeTab:discTab.id });\r\n        return;\r\n    }\r\n\r\n    submitForm = () =>\r\n    {   \r\n        try\r\n        {  \r\n            let maxVal = this.props.transaction.amountOwed;\r\n            let inputPrice = parseFloat(this.state.formData.price);\r\n            let inputPerc = parseFloat(this.state.formData.percentage);\r\n            let discountAmt = 0;\r\n\r\n            if(this.state.activeTab == 0)\r\n            {\r\n                if(inputPerc === 0)\r\n                {\r\n                    this.props.doClose();\r\n                    return;\r\n                }\r\n                if(inputPerc < 0 || inputPerc > 99)\r\n                {\r\n                    this.setState({formError : \"Invalid input!\"});\r\n                    return;\r\n                }\r\n                discountAmt = (maxVal * inputPerc / 100);\r\n            }\r\n            else \r\n            {\r\n                if(inputPerc < 0 || inputPerc > maxVal)\r\n                {\r\n                    this.setState({formError : \"Invalid input!\"});\r\n                    return;\r\n                }\r\n                if(this.state.activeTab == 1)\r\n                {       \r\n                    if(inputPrice === 0)\r\n                    {\r\n                        this.props.doClose();\r\n                        return;\r\n                    }\r\n                    discountAmt = inputPrice;\r\n                }\r\n                if(this.state.activeTab == 2)\r\n                {       \r\n                    if(inputPrice === maxVal)\r\n                    {\r\n                        this.props.doClose();\r\n                        return;\r\n                    }\r\n                    discountAmt = maxVal - inputPrice;\r\n                }\r\n            }\r\n            \r\n            this.setState({ isLoading:true });\r\n            \r\n            let service = new TransactionService();\r\n            let reqObj = {\r\n                discountAmt: -1 * parseFloat(discountAmt).toFixed(2)\r\n            };\r\n            service.totalDiscount(reqObj).then(res =>\r\n            {\r\n                if(res.data.flowSuccess === true)\r\n                {\r\n                    this.setState({ isLoading:false });\r\n                    this.props.doClose();\r\n                }\r\n                else\r\n                {\r\n                    this.setState({formError : res.data.errorMsg , isLoading:false})\r\n                }\r\n            });\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n    render() \r\n    {\r\n        let formData = this.state.formData;\r\n        let formError = this.state.formError;\r\n\r\n        let render = [];\r\n        render.push(   \r\n            <div key=\"modal-header\" className=\"modal-header\">\r\n                <h3 className=\"modal-title\" style={{margin:\"auto\"}}>  Total Discount </h3> \r\n            </div>\r\n        );\r\n        \r\n        let tabBtns = [];\r\n        tabBtns.push( {key:\"percent\", id:0, text:\"Percentage\", } );\r\n        tabBtns.push( {key:\"redPrice\", id:1, text:\"Reduce Price\", } );\r\n        tabBtns.push( {key:\"setPrice\", id:2, text:\"Set Price\", } );\r\n        \r\n        let tabBtnRender = [];\r\n        \r\n   \r\n        tabBtns.forEach(tabBtn => {\r\n            if(tabBtn.id === this.state.activeTab)\r\n            {\r\n                tabBtnRender.push(\r\n                    <li key={tabBtn.id} className=\"nav-item\">\r\n                        <button key={tabBtn.id} className=\"nav-link active\"  style={{fontSize:\"16px\"}}\r\n                                type=\"button\" onClick={() => this.toggleDiscTab(tabBtn)} >  \r\n                            {tabBtn.text} \r\n                        </button>\r\n                    </li>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                tabBtnRender.push(\r\n                    <li key={tabBtn.id} className=\"nav-item\">\r\n                        <button key={tabBtn.id} className=\"nav-link\" style={{fontSize:\"16px\"}}\r\n                                type=\"button\" onClick={() => this.toggleDiscTab(tabBtn)} >  \r\n                            {tabBtn.text} \r\n                        </button>\r\n                    </li>\r\n                );\r\n            }\r\n        });\r\n        \r\n        let tabContentRender =  <form>\r\n                <Input key={this.state.activeTab} name=\"price\" type=\"number\" min=\"0.00\" step=\"0.01\" value={formData.price} onChange={this.handleInputChange}  />\r\n            </form>;\r\n            \r\n        if(this.state.activeTab == 0)\r\n        {\r\n            tabContentRender =  <form>\r\n                    <Input key={this.state.activeTab} name=\"percentage\" type=\"number\" min=\"0.00\"  step=\"0.01\" value={formData.percentage} onChange={this.handleInputChange}  />\r\n                </form>;\r\n        }\r\n\r\n        render.push(\r\n            <div key=\"modal-body\" className=\"modal-body\">\r\n                <ul className=\"nav nav-tabs\" id=\"myTab\">\r\n                    {tabBtnRender}\r\n                </ul>\r\n                <hr/>\r\n                <div>\r\n                    {tabContentRender}\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n        render.push(\r\n            <div key=\"modal-footer\" className=\"modal-footer\">\r\n                <button\r\n                    type=\"button\" className=\"btn btn-danger\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\"}} \r\n                    onClick={() => this.props.doClose()}  > \r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    type=\"button\" className=\"btn btn-success\" \r\n                    id=\"signIn_FormSubmit\" style={{width: \"48%\",backgroundColor:\"#f16b52\"}} \r\n                    onClick={() => this.handleFormSubmit()} > \r\n                    Confirm\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        if(formError && formError !== \"\")\r\n        {\r\n            render.push(\r\n                <div key=\"modal-error\" className=\"list-group-item list-group-item-danger\" > { formError } </div>\r\n            );\r\n        }\r\n\r\n        return ( \r\n        \r\n            <div>\r\n                <div className=\"modal-dialog \" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        {render}\r\n                    </div>\r\n                </div>\r\n                { this.state.isLoading &&  <Loading/> }\r\n            </div>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default TotalDisc;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AbortTxn.component.jsx",["199","200","201"],"\r\nimport React, { Component } from 'react';\r\nimport Constants from '../../DTOs/Constants'\r\nimport TransactionService from '../../apiServices/TransactionService';\r\nimport Swal from 'sweetalert2'\r\n\r\nclass AbortTxn extends Component \r\n{\r\n\r\n    async callAbortTxn()\r\n    {   \r\n        try\r\n        {    \r\n            let service = new TransactionService();\r\n            \r\n            service.abortTxn().then(res =>\r\n            {\r\n                if(res.data.flowSuccess === true)\r\n                {\r\n                    this.props.doClose();\r\n                    return true;\r\n                }\r\n                else\r\n                {\r\n                    console.error(res.data.errorMsg)\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    render() \r\n    { \r\n        const selectedLineNmbr = this.props.selectedLineNmbr ;\r\n\r\n        Swal.fire({\r\n            title: 'Abort Transaction?',\r\n            text: \"Are you sure you want to abort the current transaction ?\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes',\r\n            confirmButtonColor: '#3a3'\r\n          }).then((res) => {\r\n            if(res.isConfirmed) \r\n            {\r\n                if (this.callAbortTxn()) \r\n                {\r\n                    Swal.fire(\r\n                        'Transaction aborted!','',\r\n                        'success'\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        text: 'Transaction could not be aborted!'\r\n                    });\r\n                }\r\n            }\r\n            else\r\n                this.props.doClose();\r\n          });\r\n\r\n          return (<div/>);\r\n    }\r\n}\r\n \r\nexport default AbortTxn;","D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Txn_components\\ItemLine.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\SearchItem.component.jsx",["202","203","204"],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\PaymentService.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\CustomerService.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\ItemService.js",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddPoints.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\components\\Popup_Components\\AddCoupon.component.jsx",[],"D:\\My Stuff\\Work\\Project repositories\\MernPos\\Client\\src\\apiServices\\CouponService.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":42,"column":44,"nodeType":"211","messageId":"212","endLine":42,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":54,"column":13,"nodeType":"215","endLine":54,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":95,"column":13,"nodeType":"215","endLine":95,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":109,"column":13,"nodeType":"215","endLine":109,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":115,"column":13,"nodeType":"215","endLine":115,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":138,"column":25,"nodeType":"215","endLine":138,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":139,"column":25,"nodeType":"215","endLine":139,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":149,"column":13,"nodeType":"215","endLine":149,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":160,"column":13,"nodeType":"215","endLine":160,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":161,"column":13,"nodeType":"215","endLine":161,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":167,"column":13,"nodeType":"215","endLine":167,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":173,"column":13,"nodeType":"215","endLine":173,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":195,"column":21,"nodeType":"215","endLine":195,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":196,"column":21,"nodeType":"215","endLine":196,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":202,"column":21,"nodeType":"215","endLine":202,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":211,"column":13,"nodeType":"215","endLine":211,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":220,"column":9,"nodeType":"215","endLine":220,"endColumn":30},{"ruleId":"213","severity":1,"message":"214","line":228,"column":13,"nodeType":"215","endLine":228,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":234,"column":13,"nodeType":"215","endLine":234,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":245,"column":13,"nodeType":"215","endLine":245,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":251,"column":13,"nodeType":"215","endLine":251,"endColumn":34},{"ruleId":"216","severity":1,"message":"217","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"221","line":19,"column":9,"nodeType":"222","messageId":"223","endLine":74,"endColumn":10},{"ruleId":"216","severity":1,"message":"217","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"224","line":21,"column":9,"nodeType":"218","messageId":"219","endLine":21,"endColumn":12},{"ruleId":"216","severity":1,"message":"225","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":15},{"ruleId":"216","severity":1,"message":"225","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":15},{"ruleId":"216","severity":1,"message":"226","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":19},{"ruleId":"216","severity":1,"message":"227","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":26},{"ruleId":"216","severity":1,"message":"228","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":41,"column":37,"nodeType":"211","messageId":"212","endLine":41,"endColumn":39},{"ruleId":"209","severity":1,"message":"210","line":62,"column":41,"nodeType":"211","messageId":"212","endLine":62,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":71,"column":41,"nodeType":"211","messageId":"212","endLine":71,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":157,"column":33,"nodeType":"211","messageId":"212","endLine":157,"endColumn":35},{"ruleId":"209","severity":1,"message":"210","line":41,"column":37,"nodeType":"211","messageId":"212","endLine":41,"endColumn":39},{"ruleId":"209","severity":1,"message":"210","line":62,"column":41,"nodeType":"211","messageId":"212","endLine":62,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":71,"column":41,"nodeType":"211","messageId":"212","endLine":71,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":157,"column":33,"nodeType":"211","messageId":"212","endLine":157,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"229","line":40,"column":15,"nodeType":"218","messageId":"219","endLine":40,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":50,"column":13,"nodeType":"232","messageId":"212","endLine":50,"endColumn":31},{"ruleId":"216","severity":1,"message":"233","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":12},{"ruleId":"216","severity":1,"message":"234","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":11},{"ruleId":"216","severity":1,"message":"226","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":19},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Constants' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'txn' is assigned a value but never used.","'Loading' is defined but never used.","'ItemService' is defined but never used.","'TransactionService' is defined but never used.","'PaymentService' is defined but never used.","'selectedLineNmbr' is assigned a value but never used.","no-dupe-keys","Duplicate key 'confirmButtonColor'.","ObjectExpression","'Form' is defined but never used.","'Joi' is defined but never used.","no-global-assign","no-unsafe-negation"]